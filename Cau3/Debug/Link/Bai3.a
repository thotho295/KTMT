;/*
; * Bai3.c
; *      Viet c.t hien thi cac so tu 11,00 den 99,99 cac so sau dau , thay doi theo chu ky 0.1s
; * Created: 11/8/2021 9:50:14 AM
; * Author: nguyen thu thao
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char LED4[10] = {0x3F,0x39,0x3B,0x3B,0x3D,0x1F,0x1D,0x3B,0x3F,0x3F};

	.DSEG
;unsigned char LED3[10] = {0x6F,0x69,0x6B,0x6B,0x6D,0x4F,0x4D,0x6B,0x6F,0x6F};
;unsigned char LED2[10] = {0xF7,0xF1,0xF3,0xF3,0xF5,0xD7,0xD5,0xF3,0xF7,0xF7};
;unsigned char LED1[10] = {0x7E,0x78,0x7A,0x7A,0x7C,0x5E,0x5C,0x7A,0x7E,0x7E};
;unsigned char LEDD[10] = {0x06,0x00,0x0E,0x0A,0x08,0x0A,0x0E,0x00,0x0E,0x0A};
;unsigned char LEDA[10] = {0x80,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80};
;//unsigned char LEDF[10] = {0x26,0x20,0x22,0x22,0x24,0x06,0x04,0x22,0x26,0x26};
;int count=0;
;int r=1100;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     TCNT0=0x06;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017     count++;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018 
; 0000 0019 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;void hienthi(int x){
; 0000 001A void hienthi(int x){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001B     int tmp,ch,dv,pch,ptr,i;
; 0000 001C     tmp = x;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;	x -> Y+12
;	tmp -> R16,R17
;	ch -> R18,R19
;	dv -> R20,R21
;	pch -> Y+10
;	ptr -> Y+8
;	i -> Y+6
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001D     ch = tmp/1000;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001E     dv = (tmp%1000)/100;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001F     pch = ((tmp%1000)%100)/10;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0020     ptr = ((tmp%1000)%100)%10;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0021 
; 0000 0022     for(i=0;i<3;i++){
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0023         //PORTF = 0b10100110;
; 0000 0024         PORTF = LED1[ch];
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0025         PORTD = LEDD[ch];
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0026         PORTA = LEDA[ch];
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0027         delay_us(10);
;PCODE: $00000053 VOL: 0
; 0000 0028 
; 0000 0029         PORTF = LED2[dv];
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002A         PORTD = LEDD[dv];
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 002B         PORTA = LEDA[dv];
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002C         delay_us(10);
;PCODE: $00000060 VOL: 0
; 0000 002D 
; 0000 002E         PORTF = LED3[pch];
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 002F         PORTD = LEDD[pch];
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0030         PORTA = LEDA[pch];
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0031         delay_us(10);
;PCODE: $0000006D VOL: 0
; 0000 0032 
; 0000 0033         PORTF = LED4[ptr];
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0034         PORTD = LEDD[ptr];
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0035         PORTA = LEDA[ptr];
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0036         delay_us(100);
;PCODE: $0000007A VOL: 0
; 0000 0037     }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0038 }
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;void main(void){
; 0000 0039 void main(void){
;PCODE: $00000085 VOL: 0
; 0000 003A     DDRF = 0xFF;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 003B     DDRD = 0xFF;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 003C     DDRA = 0xFF;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 003D         ASSR=0<<AS0;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 003E     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 003F     TCNT0=0x06;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0040     OCR0=0x00;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0041 
; 0000 0042     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0043     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0044     ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0045 
; 0000 0046 
; 0000 0047     // Global enable interrupts
; 0000 0048     #asm("sei")
;PCODE: $00000098 VOL: 0
	sei
;PCODE: $00000099 VOL: 0
; 0000 0049     while (1)
;PCODE: $0000009A VOL: 0
; 0000 004A         {
; 0000 004B             hienthi(r);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 004C             if(count >= 100 && r<9999){
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 004D                 r++;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 004E                 hienthi(r);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 004F                 count=0;
;PCODE: $000000AC VOL: 0
; 0000 0050             }
; 0000 0051         }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0052 }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
