
AVRASM ver. 2.1.30  D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm Thu Nov 11 14:59:04 2021

D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1092): warning: Register r7 already defined by the .DEF directive
D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1093): warning: Register r6 already defined by the .DEF directive
D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1094): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128A
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dem=R4
                 	.DEF _dem_msb=R5
                 	.DEF __lcd_x=R7
                 	.DEF __lcd_y=R6
                 	.DEF __lcd_maxx=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0061 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00004f 6f73
000050 6e20
000051 7567
000052 696f      	.DB  0x73,0x6F,0x20,0x6E,0x67,0x75,0x6F,0x69
000053 203a
000054 6425
000055 7300
000056 206f      	.DB  0x3A,0x20,0x25,0x64,0x0,0x73,0x6F,0x20
000057 676e
000058 6f75
000059 3a69
00005a 6425      	.DB  0x6E,0x67,0x75,0x6F,0x69,0x3A,0x25,0x64
D:\KienTrucMayTinh\KTGK\Bai8\Debug\List\Bai8.asm(1149): warning: .cseg .db misalignment - padding zero byte
00005b 0000      	.DB  0x0
                 _0x2000003:
00005c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00005d 0002      	.DW  0x02
00005e 050a      	.DW  __base_y_G100
00005f 00b8      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000060 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000061 94f8      	CLI
000062 27ee      	CLR  R30
000063 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000064 e0f1      	LDI  R31,1
000065 bff5      	OUT  MCUCR,R31
000066 bfe5      	OUT  MCUCR,R30
000067 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000069 e08d      	LDI  R24,(14-2)+1
00006a e0a2      	LDI  R26,2
00006b 27bb      	CLR  R27
                 __CLEAR_REG:
00006c 93ed      	ST   X+,R30
00006d 958a      	DEC  R24
00006e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000070 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000071 e0a0      	LDI  R26,LOW(__SRAM_START)
000072 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000073 93ed      	ST   X+,R30
000074 9701      	SBIW R24,1
000075 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000076 ebea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000077 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000078 9185      	LPM  R24,Z+
000079 9195      	LPM  R25,Z+
00007a 9700      	SBIW R24,0
00007b f061      	BREQ __GLOBAL_INI_END
00007c 91a5      	LPM  R26,Z+
00007d 91b5      	LPM  R27,Z+
00007e 9005      	LPM  R0,Z+
00007f 9015      	LPM  R1,Z+
000080 01bf      	MOVW R22,R30
000081 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000082 9005      	LPM  R0,Z+
000083 920d      	ST   X+,R0
000084 9701      	SBIW R24,1
000085 f7e1      	BRNE __GLOBAL_INI_LOOP
000086 01fb      	MOVW R30,R22
000087 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000088 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000089 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008a bfed      	OUT  SPL,R30
00008b e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008e e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008f 940c 0091 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * Bai8.c
                 ; *
                 ; * Created: 11/11/2021 8:58:21 AM
                 ; * Author: nguyen thu thao
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#define BT1 PINB.3
                 ;#define BT2 PINB.2
                 ;#define LED PORTD.4
                 ;int dem;
                 ;char buffer[10];
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0013 DDRB = 0x00;
000091 e0e0      	LDI  R30,LOW(0)
000092 bbe7      	OUT  0x17,R30
                 ; 0000 0014 PORTB = 0x0C;
000093 e0ec      	LDI  R30,LOW(12)
000094 bbe8      	OUT  0x18,R30
                 ; 0000 0015 DDRD = 0x10;
000095 e1e0      	LDI  R30,LOW(16)
000096 bbe1      	OUT  0x11,R30
                 ; 0000 0016 PORTD = 0x00;
000097 e0e0      	LDI  R30,LOW(0)
000098 bbe2      	OUT  0x12,R30
                 ; 0000 0017 DDRC=0xFF;
000099 efef      	LDI  R30,LOW(255)
00009a bbe4      	OUT  0x14,R30
                 ; 0000 0018 PORTC=0x00;    //0b0000 0000
00009b e0e0      	LDI  R30,LOW(0)
00009c bbe5      	OUT  0x15,R30
                 ; 0000 0019 lcd_init(16);
00009d e1a0      	LDI  R26,LOW(16)
00009e d0b4      	RCALL _lcd_init
                 ; 0000 001A sprintf(buffer,"so nguoi: %d", dem);
00009f 940e 0343 	CALL SUBOPT_0x0
                +
0000a1 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000a3 940e 0348 	CALL SUBOPT_0x1
                 ; 0000 001B lcd_clear();
                 ; 0000 001C lcd_puts(buffer);
                 ; 0000 001D while (1)
                 _0x3:
                 ; 0000 001E     {
                 ; 0000 001F     if(BT2 == 0 ){
0000a5 99b2      	SBIC 0x16,2
0000a6 c015      	RJMP _0x6
                 ; 0000 0020         while (BT1);
                 _0x7:
0000a7 99b3      	SBIC 0x16,3
0000a8 cffe      	RJMP _0x7
                 ; 0000 0021         delay_ms(250);
0000a9 efaa      	LDI  R26,LOW(250)
0000aa e0b0      	LDI  R27,0
0000ab 940e 0393 	CALL _delay_ms
                 ; 0000 0022         dem--;
0000ad 01f2      	MOVW R30,R4
0000ae 9731      	SBIW R30,1
0000af 012f      	MOVW R4,R30
                 ; 0000 0023         if (dem <0 ) dem=0;
0000b0 2400      	CLR  R0
0000b1 1440      	CP   R4,R0
0000b2 0450      	CPC  R5,R0
0000b3 f414      	BRGE _0xA
0000b4 2444      	CLR  R4
0000b5 2455      	CLR  R5
                 ; 0000 0024         sprintf(buffer,"so nguoi:%d", dem);
                 _0xA:
0000b6 940e 0343 	CALL SUBOPT_0x0
                +
0000b8 eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000b9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000ba 940e 0348 	CALL SUBOPT_0x1
                 ; 0000 0025         lcd_clear();
                 ; 0000 0026         lcd_puts(buffer);
                 ; 0000 0027     }
                 ; 0000 0028     if (BT1 == 0){
                 _0x6:
0000bc 99b3      	SBIC 0x16,3
0000bd c00f      	RJMP _0xB
                 ; 0000 0029         while(BT2);
                 _0xC:
0000be 99b2      	SBIC 0x16,2
0000bf cffe      	RJMP _0xC
                 ; 0000 002A         delay_ms(250);
0000c0 efaa      	LDI  R26,LOW(250)
0000c1 e0b0      	LDI  R27,0
0000c2 940e 0393 	CALL _delay_ms
                 ; 0000 002B         dem++;
0000c4 01f2      	MOVW R30,R4
0000c5 9631      	ADIW R30,1
0000c6 012f      	MOVW R4,R30
                 ; 0000 002C         sprintf(buffer,"so nguoi:%d", dem);
0000c7 940e 0343 	CALL SUBOPT_0x0
                +
0000c9 eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000ca e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000cb 940e 0348 	CALL SUBOPT_0x1
                 ; 0000 002D         lcd_clear();
                 ; 0000 002E         lcd_puts(buffer);
                 ; 0000 002F     }
                 ; 0000 0030     if (dem > 0) {
                 _0xB:
0000cd 2400      	CLR  R0
0000ce 1404      	CP   R0,R4
0000cf 0405      	CPC  R0,R5
0000d0 f46c      	BRGE _0xF
                 ; 0000 0031         LED = 1;
0000d1 9a94      	SBI  0x12,4
                 ; 0000 0032         PORTC = 0b00001000;
0000d2 e0e8      	LDI  R30,LOW(8)
0000d3 bbe5      	OUT  0x15,R30
                 ; 0000 0033         if (dem >5 ){
0000d4 e0e5      	LDI  R30,LOW(5)
0000d5 e0f0      	LDI  R31,HIGH(5)
0000d6 15e4      	CP   R30,R4
0000d7 05f5      	CPC  R31,R5
0000d8 f414      	BRGE _0x12
                 ; 0000 0034             PORTC = 0x0C; //0b00001100
0000d9 e0ec      	LDI  R30,LOW(12)
0000da c001      	RJMP _0x18
                 ; 0000 0035         }
                 ; 0000 0036         else  {
                 _0x12:
                 ; 0000 0037             PORTC = 0x08; //0b00001000
0000db e0e8      	LDI  R30,LOW(8)
                 _0x18:
0000dc bbe5      	OUT  0x15,R30
                 ; 0000 0038         }
                 ; 0000 0039     }
                 ; 0000 003A     else {
0000dd c003      	RJMP _0x14
                 _0xF:
                 ; 0000 003B         LED =0;
0000de 9894      	CBI  0x12,4
                 ; 0000 003C         PORTC = 0x00;
0000df e0e0      	LDI  R30,LOW(0)
0000e0 bbe5      	OUT  0x15,R30
                 ; 0000 003D     }
                 _0x14:
                 ; 0000 003E     }
0000e1 cfc3      	RJMP _0x3
                 ; 0000 003F }
                 _0x17:
0000e2 cfff      	RJMP _0x17
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000e3 93aa      	ST   -Y,R26
0000e4 81e8      	LD   R30,Y
0000e5 71e0      	ANDI R30,LOW(0x10)
0000e6 f011      	BREQ _0x2000004
0000e7 9adb      	SBI  0x1B,3
0000e8 c001      	RJMP _0x2000005
                 _0x2000004:
0000e9 98db      	CBI  0x1B,3
                 _0x2000005:
0000ea 81e8      	LD   R30,Y
0000eb 72e0      	ANDI R30,LOW(0x20)
0000ec f011      	BREQ _0x2000006
0000ed 9adc      	SBI  0x1B,4
0000ee c001      	RJMP _0x2000007
                 _0x2000006:
0000ef 98dc      	CBI  0x1B,4
                 _0x2000007:
0000f0 81e8      	LD   R30,Y
0000f1 74e0      	ANDI R30,LOW(0x40)
0000f2 f011      	BREQ _0x2000008
0000f3 9add      	SBI  0x1B,5
0000f4 c001      	RJMP _0x2000009
                 _0x2000008:
0000f5 98dd      	CBI  0x1B,5
                 _0x2000009:
0000f6 81e8      	LD   R30,Y
0000f7 78e0      	ANDI R30,LOW(0x80)
0000f8 f011      	BREQ _0x200000A
0000f9 9ade      	SBI  0x1B,6
0000fa c001      	RJMP _0x200000B
                 _0x200000A:
0000fb 98de      	CBI  0x1B,6
                 _0x200000B:
                +
0000fc e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000fd 958a     +DEC R24
0000fe f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ff 9ada      	SBI  0x1B,2
                +
000100 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000101 958a     +DEC R24
000102 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000103 98da      	CBI  0x1B,2
                +
000104 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000105 958a     +DEC R24
000106 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000107 c078      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000108 93aa      	ST   -Y,R26
000109 81a8      	LD   R26,Y
00010a dfd8      	RCALL __lcd_write_nibble_G100
00010b 81e8          ld    r30,y
00010c 95e2          swap  r30
00010d 83e8          st    y,r30
00010e 81a8      	LD   R26,Y
00010f dfd3      	RCALL __lcd_write_nibble_G100
                +
000110 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000111 958a     +DEC R24
000112 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000113 c06c      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000114 93aa      	ST   -Y,R26
000115 81e8      	LD   R30,Y
000116 e0f0      	LDI  R31,0
000117 5fe6      	SUBI R30,LOW(-__base_y_G100)
000118 4ffa      	SBCI R31,HIGH(-__base_y_G100)
000119 81e0      	LD   R30,Z
00011a 81a9      	LDD  R26,Y+1
00011b 0fae      	ADD  R26,R30
00011c dfeb      	RCALL __lcd_write_data
00011d 8079      	LDD  R7,Y+1
00011e 8068      	LDD  R6,Y+0
00011f 9622      	ADIW R28,2
000120 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000121 e0a2      	LDI  R26,LOW(2)
000122 940e 0359 	CALL SUBOPT_0x2
000124 e0ac      	LDI  R26,LOW(12)
000125 dfe2      	RCALL __lcd_write_data
000126 e0a1      	LDI  R26,LOW(1)
000127 940e 0359 	CALL SUBOPT_0x2
000129 e0e0      	LDI  R30,LOW(0)
00012a 2e6e      	MOV  R6,R30
00012b 2e7e      	MOV  R7,R30
00012c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00012d 93aa      	ST   -Y,R26
00012e 81a8      	LD   R26,Y
00012f 30aa      	CPI  R26,LOW(0xA)
000130 f011      	BREQ _0x2000011
000131 1479      	CP   R7,R9
000132 f048      	BRLO _0x2000010
                 _0x2000011:
000133 e0e0      	LDI  R30,LOW(0)
000134 93ea      	ST   -Y,R30
000135 9463      	INC  R6
000136 2da6      	MOV  R26,R6
000137 dfdc      	RCALL _lcd_gotoxy
000138 81a8      	LD   R26,Y
000139 30aa      	CPI  R26,LOW(0xA)
00013a f409      	BRNE _0x2000013
00013b c044      	RJMP _0x2080002
                 _0x2000013:
                 _0x2000010:
00013c 9473      	INC  R7
00013d 9ad8      	SBI  0x1B,0
00013e 81a8      	LD   R26,Y
00013f dfc8      	RCALL __lcd_write_data
000140 98d8      	CBI  0x1B,0
000141 c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000142 93ba      	ST   -Y,R27
000143 93aa      	ST   -Y,R26
000144 931a      	ST   -Y,R17
                 _0x2000014:
000145 81a9      	LDD  R26,Y+1
000146 81ba      	LDD  R27,Y+1+1
000147 91ed      	LD   R30,X+
000148 83a9      	STD  Y+1,R26
000149 83ba      	STD  Y+1+1,R27
00014a 2f1e      	MOV  R17,R30
00014b 30e0      	CPI  R30,0
00014c f019      	BREQ _0x2000016
00014d 2fa1      	MOV  R26,R17
00014e dfde      	RCALL _lcd_putchar
00014f cff5      	RJMP _0x2000014
                 _0x2000016:
000150 8118      	LDD  R17,Y+0
000151 9623      	ADIW R28,3
000152 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000153 93aa      	ST   -Y,R26
000154 9ad3      	SBI  0x1A,3
000155 9ad4      	SBI  0x1A,4
000156 9ad5      	SBI  0x1A,5
000157 9ad6      	SBI  0x1A,6
000158 9ad2      	SBI  0x1A,2
000159 9ad0      	SBI  0x1A,0
00015a 9ad1      	SBI  0x1A,1
00015b 98da      	CBI  0x1B,2
00015c 98d8      	CBI  0x1B,0
00015d 98d9      	CBI  0x1B,1
00015e 8098      	LDD  R9,Y+0
00015f 81e8      	LD   R30,Y
000160 58e0      	SUBI R30,-LOW(128)
                +
000161 93e0 050c+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000163 81e8      	LD   R30,Y
000164 54e0      	SUBI R30,-LOW(192)
                +
000165 93e0 050d+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000167 e1a4      	LDI  R26,LOW(20)
000168 e0b0      	LDI  R27,0
000169 940e 0393 	CALL _delay_ms
00016b 940e 035f 	CALL SUBOPT_0x3
00016d 940e 035f 	CALL SUBOPT_0x3
00016f 940e 035f 	CALL SUBOPT_0x3
000171 e2a0      	LDI  R26,LOW(32)
000172 df70      	RCALL __lcd_write_nibble_G100
                +
000173 ec88     +LDI R24 , LOW ( 200 )
000174 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000175 9701     +SBIW R24 , 1
000176 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000177 e2a8      	LDI  R26,LOW(40)
000178 df8f      	RCALL __lcd_write_data
000179 e0a4      	LDI  R26,LOW(4)
00017a df8d      	RCALL __lcd_write_data
00017b e8a5      	LDI  R26,LOW(133)
00017c df8b      	RCALL __lcd_write_data
00017d e0a6      	LDI  R26,LOW(6)
00017e df89      	RCALL __lcd_write_data
00017f dfa1      	RCALL _lcd_clear
                 _0x2080002:
000180 9621      	ADIW R28,1
000181 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000182 93ba      	ST   -Y,R27
000183 93aa      	ST   -Y,R26
000184 931a      	ST   -Y,R17
000185 930a      	ST   -Y,R16
000186 81aa      	LDD  R26,Y+2
000187 81bb      	LDD  R27,Y+2+1
000188 9612      	ADIW R26,2
000189 940e 03aa 	CALL __GETW1P
00018b 9730      	SBIW R30,0
00018c f159      	BREQ _0x2020010
00018d 81aa      	LDD  R26,Y+2
00018e 81bb      	LDD  R27,Y+2+1
00018f 9614      	ADIW R26,4
000190 940e 03aa 	CALL __GETW1P
000192 018f      	MOVW R16,R30
000193 9730      	SBIW R30,0
000194 f061      	BREQ _0x2020012
                +
000195 3002     +CPI R16 , LOW ( 2 )
000196 e0e0     +LDI R30 , HIGH ( 2 )
000197 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000198 f098      	BRLO _0x2020013
000199 01f8      	MOVW R30,R16
00019a 9731      	SBIW R30,1
00019b 018f      	MOVW R16,R30
                +
00019c 81aa     +LDD R26 , Y + 2
00019d 81bb     +LDD R27 , Y + 2 + 1
00019e 9614     +ADIW R26 , 4
00019f 93ed     +ST X + , R30
0001a0 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0001a1 81aa      	LDD  R26,Y+2
0001a2 81bb      	LDD  R27,Y+2+1
0001a3 9612      	ADIW R26,2
0001a4 91ed      	LD   R30,X+
0001a5 91fd      	LD   R31,X+
0001a6 9631      	ADIW R30,1
0001a7 93fe      	ST   -X,R31
0001a8 93ee      	ST   -X,R30
0001a9 9731      	SBIW R30,1
0001aa 81ac      	LDD  R26,Y+4
0001ab 83a0      	STD  Z+0,R26
                 _0x2020013:
0001ac 81aa      	LDD  R26,Y+2
0001ad 81bb      	LDD  R27,Y+2+1
0001ae 940e 03aa 	CALL __GETW1P
0001b0 23ff      	TST  R31
0001b1 f02a      	BRMI _0x2020014
0001b2 91ed      	LD   R30,X+
0001b3 91fd      	LD   R31,X+
0001b4 9631      	ADIW R30,1
0001b5 93fe      	ST   -X,R31
0001b6 93ee      	ST   -X,R30
                 _0x2020014:
0001b7 c006      	RJMP _0x2020015
                 _0x2020010:
0001b8 81aa      	LDD  R26,Y+2
0001b9 81bb      	LDD  R27,Y+2+1
0001ba efef      	LDI  R30,LOW(65535)
0001bb efff      	LDI  R31,HIGH(65535)
0001bc 93ed      	ST   X+,R30
0001bd 93fc      	ST   X,R31
                 _0x2020015:
0001be 8119      	LDD  R17,Y+1
0001bf 8108      	LDD  R16,Y+0
0001c0 9625      	ADIW R28,5
0001c1 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001c2 93ba      	ST   -Y,R27
0001c3 93aa      	ST   -Y,R26
0001c4 9726      	SBIW R28,6
0001c5 940e 03b7 	CALL __SAVELOCR6
0001c7 e010      	LDI  R17,0
0001c8 85ac      	LDD  R26,Y+12
0001c9 85bd      	LDD  R27,Y+12+1
0001ca e0e0      	LDI  R30,LOW(0)
0001cb e0f0      	LDI  R31,HIGH(0)
0001cc 93ed      	ST   X+,R30
0001cd 93fc      	ST   X,R31
                 _0x2020016:
0001ce 89ea      	LDD  R30,Y+18
0001cf 89fb      	LDD  R31,Y+18+1
0001d0 9631      	ADIW R30,1
0001d1 8bea      	STD  Y+18,R30
0001d2 8bfb      	STD  Y+18+1,R31
0001d3 9731      	SBIW R30,1
0001d4 91e4      	LPM  R30,Z
0001d5 2f2e      	MOV  R18,R30
0001d6 30e0      	CPI  R30,0
0001d7 f409      	BRNE PC+2
0001d8 c115      	RJMP _0x2020018
0001d9 2fe1      	MOV  R30,R17
0001da 30e0      	CPI  R30,0
0001db f439      	BRNE _0x202001C
0001dc 3225      	CPI  R18,37
0001dd f411      	BRNE _0x202001D
0001de e011      	LDI  R17,LOW(1)
0001df c002      	RJMP _0x202001E
                 _0x202001D:
0001e0 940e 0367 	CALL SUBOPT_0x4
                 _0x202001E:
0001e2 c10a      	RJMP _0x202001B
                 _0x202001C:
0001e3 30e1      	CPI  R30,LOW(0x1)
0001e4 f4a9      	BRNE _0x202001F
0001e5 3225      	CPI  R18,37
0001e6 f419      	BRNE _0x2020020
0001e7 940e 0367 	CALL SUBOPT_0x4
0001e9 c102      	RJMP _0x20200CC
                 _0x2020020:
0001ea e012      	LDI  R17,LOW(2)
0001eb e040      	LDI  R20,LOW(0)
0001ec e000      	LDI  R16,LOW(0)
0001ed 322d      	CPI  R18,45
0001ee f411      	BRNE _0x2020021
0001ef e001      	LDI  R16,LOW(1)
0001f0 c0fc      	RJMP _0x202001B
                 _0x2020021:
0001f1 322b      	CPI  R18,43
0001f2 f411      	BRNE _0x2020022
0001f3 e24b      	LDI  R20,LOW(43)
0001f4 c0f8      	RJMP _0x202001B
                 _0x2020022:
0001f5 3220      	CPI  R18,32
0001f6 f411      	BRNE _0x2020023
0001f7 e240      	LDI  R20,LOW(32)
0001f8 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001f9 c002      	RJMP _0x2020024
                 _0x202001F:
0001fa 30e2      	CPI  R30,LOW(0x2)
0001fb f439      	BRNE _0x2020025
                 _0x2020024:
0001fc e050      	LDI  R21,LOW(0)
0001fd e013      	LDI  R17,LOW(3)
0001fe 3320      	CPI  R18,48
0001ff f411      	BRNE _0x2020026
000200 6800      	ORI  R16,LOW(128)
000201 c0eb      	RJMP _0x202001B
                 _0x2020026:
000202 c003      	RJMP _0x2020027
                 _0x2020025:
000203 30e3      	CPI  R30,LOW(0x3)
000204 f009      	BREQ PC+2
000205 c0e7      	RJMP _0x202001B
                 _0x2020027:
000206 3320      	CPI  R18,48
000207 f010      	BRLO _0x202002A
000208 332a      	CPI  R18,58
000209 f008      	BRLO _0x202002B
                 _0x202002A:
00020a c007      	RJMP _0x2020029
                 _0x202002B:
00020b e0aa      	LDI  R26,LOW(10)
00020c 9f5a      	MUL  R21,R26
00020d 2d50      	MOV  R21,R0
00020e 2fe2      	MOV  R30,R18
00020f 53e0      	SUBI R30,LOW(48)
000210 0f5e      	ADD  R21,R30
000211 c0db      	RJMP _0x202001B
                 _0x2020029:
000212 2fe2      	MOV  R30,R18
000213 36e3      	CPI  R30,LOW(0x63)
000214 f449      	BRNE _0x202002F
000215 940e 036e 	CALL SUBOPT_0x5
000217 89e8      	LDD  R30,Y+16
000218 89f9      	LDD  R31,Y+16+1
000219 81a4      	LDD  R26,Z+4
00021a 93aa      	ST   -Y,R26
00021b 940e 0374 	CALL SUBOPT_0x6
00021d c0ce      	RJMP _0x2020030
                 _0x202002F:
00021e 37e3      	CPI  R30,LOW(0x73)
00021f f441      	BRNE _0x2020032
000220 940e 036e 	CALL SUBOPT_0x5
000222 940e 037a 	CALL SUBOPT_0x7
000224 940e 032a 	CALL _strlen
000226 2f1e      	MOV  R17,R30
000227 c00a      	RJMP _0x2020033
                 _0x2020032:
000228 37e0      	CPI  R30,LOW(0x70)
000229 f461      	BRNE _0x2020035
00022a 940e 036e 	CALL SUBOPT_0x5
00022c 940e 037a 	CALL SUBOPT_0x7
00022e 940e 0336 	CALL _strlenf
000230 2f1e      	MOV  R17,R30
000231 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000232 6002      	ORI  R16,LOW(2)
000233 770f      	ANDI R16,LOW(127)
000234 e030      	LDI  R19,LOW(0)
000235 c034      	RJMP _0x2020036
                 _0x2020035:
000236 36e4      	CPI  R30,LOW(0x64)
000237 f011      	BREQ _0x2020039
000238 36e9      	CPI  R30,LOW(0x69)
000239 f411      	BRNE _0x202003A
                 _0x2020039:
00023a 6004      	ORI  R16,LOW(4)
00023b c002      	RJMP _0x202003B
                 _0x202003A:
00023c 37e5      	CPI  R30,LOW(0x75)
00023d f431      	BRNE _0x202003C
                 _0x202003B:
00023e e8ec      	LDI  R30,LOW(_tbl10_G101*2)
00023f e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000240 83ee      	STD  Y+6,R30
000241 83ff      	STD  Y+6+1,R31
000242 e015      	LDI  R17,LOW(5)
000243 c00c      	RJMP _0x202003D
                 _0x202003C:
000244 35e8      	CPI  R30,LOW(0x58)
000245 f411      	BRNE _0x202003F
000246 6008      	ORI  R16,LOW(8)
000247 c003      	RJMP _0x2020040
                 _0x202003F:
000248 37e8      	CPI  R30,LOW(0x78)
000249 f009      	BREQ PC+2
00024a c0a1      	RJMP _0x2020071
                 _0x2020040:
00024b e9e6      	LDI  R30,LOW(_tbl16_G101*2)
00024c e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00024d 83ee      	STD  Y+6,R30
00024e 83ff      	STD  Y+6+1,R31
00024f e014      	LDI  R17,LOW(4)
                 _0x202003D:
000250 ff02      	SBRS R16,2
000251 c014      	RJMP _0x2020042
000252 940e 036e 	CALL SUBOPT_0x5
000254 940e 0384 	CALL SUBOPT_0x8
000256 85ab      	LDD  R26,Y+11
000257 23aa      	TST  R26
000258 f43a      	BRPL _0x2020043
000259 85ea      	LDD  R30,Y+10
00025a 85fb      	LDD  R31,Y+10+1
00025b 940e 03a1 	CALL __ANEGW1
00025d 87ea      	STD  Y+10,R30
00025e 87fb      	STD  Y+10+1,R31
00025f e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000260 3040      	CPI  R20,0
000261 f011      	BREQ _0x2020044
000262 5f1f      	SUBI R17,-LOW(1)
000263 c001      	RJMP _0x2020045
                 _0x2020044:
000264 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000265 c004      	RJMP _0x2020046
                 _0x2020042:
000266 940e 036e 	CALL SUBOPT_0x5
000268 940e 0384 	CALL SUBOPT_0x8
                 _0x2020046:
                 _0x2020036:
00026a fd00      	SBRC R16,0
00026b c011      	RJMP _0x2020047
                 _0x2020048:
00026c 1715      	CP   R17,R21
00026d f478      	BRSH _0x202004A
00026e ff07      	SBRS R16,7
00026f c008      	RJMP _0x202004B
000270 ff02      	SBRS R16,2
000271 c004      	RJMP _0x202004C
000272 7f0b      	ANDI R16,LOW(251)
000273 2f24      	MOV  R18,R20
000274 5011      	SUBI R17,LOW(1)
000275 c001      	RJMP _0x202004D
                 _0x202004C:
000276 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000277 c001      	RJMP _0x202004E
                 _0x202004B:
000278 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000279 940e 0367 	CALL SUBOPT_0x4
00027b 5051      	SUBI R21,LOW(1)
00027c cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00027d 2f31      	MOV  R19,R17
00027e ff01      	SBRS R16,1
00027f c017      	RJMP _0x202004F
                 _0x2020050:
000280 3030      	CPI  R19,0
000281 f0a1      	BREQ _0x2020052
000282 ff03      	SBRS R16,3
000283 c006      	RJMP _0x2020053
000284 81ee      	LDD  R30,Y+6
000285 81ff      	LDD  R31,Y+6+1
000286 9125      	LPM  R18,Z+
000287 83ee      	STD  Y+6,R30
000288 83ff      	STD  Y+6+1,R31
000289 c005      	RJMP _0x2020054
                 _0x2020053:
00028a 81ae      	LDD  R26,Y+6
00028b 81bf      	LDD  R27,Y+6+1
00028c 912d      	LD   R18,X+
00028d 83ae      	STD  Y+6,R26
00028e 83bf      	STD  Y+6+1,R27
                 _0x2020054:
00028f 940e 0367 	CALL SUBOPT_0x4
000291 3050      	CPI  R21,0
000292 f009      	BREQ _0x2020055
000293 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000294 5031      	SUBI R19,LOW(1)
000295 cfea      	RJMP _0x2020050
                 _0x2020052:
000296 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000297 e320      	LDI  R18,LOW(48)
000298 81ee      	LDD  R30,Y+6
000299 81ff      	LDD  R31,Y+6+1
00029a 940e 03ae 	CALL __GETW1PF
00029c 87e8      	STD  Y+8,R30
00029d 87f9      	STD  Y+8+1,R31
00029e 81ee      	LDD  R30,Y+6
00029f 81ff      	LDD  R31,Y+6+1
0002a0 9632      	ADIW R30,2
0002a1 83ee      	STD  Y+6,R30
0002a2 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0002a3 85e8      	LDD  R30,Y+8
0002a4 85f9      	LDD  R31,Y+8+1
0002a5 85aa      	LDD  R26,Y+10
0002a6 85bb      	LDD  R27,Y+10+1
0002a7 17ae      	CP   R26,R30
0002a8 07bf      	CPC  R27,R31
0002a9 f050      	BRLO _0x202005C
0002aa 5f2f      	SUBI R18,-LOW(1)
0002ab 85a8      	LDD  R26,Y+8
0002ac 85b9      	LDD  R27,Y+8+1
0002ad 85ea      	LDD  R30,Y+10
0002ae 85fb      	LDD  R31,Y+10+1
0002af 1bea      	SUB  R30,R26
0002b0 0bfb      	SBC  R31,R27
0002b1 87ea      	STD  Y+10,R30
0002b2 87fb      	STD  Y+10+1,R31
0002b3 cfef      	RJMP _0x202005A
                 _0x202005C:
0002b4 332a      	CPI  R18,58
0002b5 f028      	BRLO _0x202005D
0002b6 ff03      	SBRS R16,3
0002b7 c002      	RJMP _0x202005E
0002b8 5f29      	SUBI R18,-LOW(7)
0002b9 c001      	RJMP _0x202005F
                 _0x202005E:
0002ba 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002bb fd04      	SBRC R16,4
0002bc c01a      	RJMP _0x2020061
0002bd 3321      	CPI  R18,49
0002be f420      	BRSH _0x2020063
0002bf 85a8      	LDD  R26,Y+8
0002c0 85b9      	LDD  R27,Y+8+1
0002c1 9711      	SBIW R26,1
0002c2 f409      	BRNE _0x2020062
                 _0x2020063:
0002c3 c009      	RJMP _0x20200CD
                 _0x2020062:
0002c4 1753      	CP   R21,R19
0002c5 f010      	BRLO _0x2020067
0002c6 ff00      	SBRS R16,0
0002c7 c001      	RJMP _0x2020068
                 _0x2020067:
0002c8 c013      	RJMP _0x2020066
                 _0x2020068:
0002c9 e220      	LDI  R18,LOW(32)
0002ca ff07      	SBRS R16,7
0002cb c00b      	RJMP _0x2020069
0002cc e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002cd 6100      	ORI  R16,LOW(16)
0002ce ff02      	SBRS R16,2
0002cf c007      	RJMP _0x202006A
0002d0 7f0b      	ANDI R16,LOW(251)
0002d1 934a      	ST   -Y,R20
0002d2 940e 0374 	CALL SUBOPT_0x6
0002d4 3050      	CPI  R21,0
0002d5 f009      	BREQ _0x202006B
0002d6 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002d7 940e 0367 	CALL SUBOPT_0x4
0002d9 3050      	CPI  R21,0
0002da f009      	BREQ _0x202006C
0002db 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002dc 5031      	SUBI R19,LOW(1)
0002dd 85a8      	LDD  R26,Y+8
0002de 85b9      	LDD  R27,Y+8+1
0002df 9712      	SBIW R26,2
0002e0 f008      	BRLO _0x2020059
0002e1 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002e2 ff00      	SBRS R16,0
0002e3 c008      	RJMP _0x202006D
                 _0x202006E:
0002e4 3050      	CPI  R21,0
0002e5 f031      	BREQ _0x2020070
0002e6 5051      	SUBI R21,LOW(1)
0002e7 e2e0      	LDI  R30,LOW(32)
0002e8 93ea      	ST   -Y,R30
0002e9 940e 0374 	CALL SUBOPT_0x6
0002eb cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002ec e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002ed cee0      	RJMP _0x2020016
                 _0x2020018:
0002ee 85ac      	LDD  R26,Y+12
0002ef 85bd      	LDD  R27,Y+12+1
0002f0 940e 03aa 	CALL __GETW1P
0002f2 940e 03be 	CALL __LOADLOCR6
0002f4 9664      	ADIW R28,20
0002f5 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002f6 92ff      	PUSH R15
0002f7 2ef8      	MOV  R15,R24
0002f8 9726      	SBIW R28,6
0002f9 940e 03b9 	CALL __SAVELOCR4
0002fb 940e 038c 	CALL SUBOPT_0x9
0002fd 9730      	SBIW R30,0
0002fe f419      	BRNE _0x2020072
0002ff efef      	LDI  R30,LOW(65535)
000300 efff      	LDI  R31,HIGH(65535)
000301 c023      	RJMP _0x2080001
                 _0x2020072:
000302 01de      	MOVW R26,R28
000303 9616      	ADIW R26,6
000304 940e 039d 	CALL __ADDW2R15
000306 018d      	MOVW R16,R26
000307 940e 038c 	CALL SUBOPT_0x9
000309 83ee      	STD  Y+6,R30
00030a 83ff      	STD  Y+6+1,R31
00030b e0e0      	LDI  R30,LOW(0)
00030c 87e8      	STD  Y+8,R30
00030d 87e9      	STD  Y+8+1,R30
00030e 01de      	MOVW R26,R28
00030f 961a      	ADIW R26,10
000310 940e 039d 	CALL __ADDW2R15
000312 940e 03aa 	CALL __GETW1P
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
000316 931a      	ST   -Y,R17
000317 930a      	ST   -Y,R16
000318 e8e2      	LDI  R30,LOW(_put_buff_G101)
000319 e0f1      	LDI  R31,HIGH(_put_buff_G101)
00031a 93fa      	ST   -Y,R31
00031b 93ea      	ST   -Y,R30
00031c 01de      	MOVW R26,R28
00031d 961a      	ADIW R26,10
00031e dea3      	RCALL __print_G101
00031f 019f      	MOVW R18,R30
000320 81ae      	LDD  R26,Y+6
000321 81bf      	LDD  R27,Y+6+1
000322 e0e0      	LDI  R30,LOW(0)
000323 93ec      	ST   X,R30
000324 01f9      	MOVW R30,R18
                 _0x2080001:
000325 940e 03c0 	CALL __LOADLOCR4
000327 962a      	ADIW R28,10
000328 90ff      	POP  R15
000329 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00032a 93ba      	ST   -Y,R27
00032b 93aa      	ST   -Y,R26
00032c 91a9          ld   r26,y+
00032d 91b9          ld   r27,y+
00032e 27ee          clr  r30
00032f 27ff          clr  r31
                 strlen0:
000330 916d          ld   r22,x+
000331 2366          tst  r22
000332 f011          breq strlen1
000333 9631          adiw r30,1
000334 cffb          rjmp strlen0
                 strlen1:
000335 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000336 93ba      	ST   -Y,R27
000337 93aa      	ST   -Y,R26
000338 27aa          clr  r26
000339 27bb          clr  r27
00033a 91e9          ld   r30,y+
00033b 91f9          ld   r31,y+
                 strlenf0:
00033c 9005      	lpm  r0,z+
00033d 2000          tst  r0
00033e f011          breq strlenf1
00033f 9611          adiw r26,1
000340 cffb          rjmp strlenf0
                 strlenf1:
000341 01fd          movw r30,r26
000342 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _buffer:
000500           	.BYTE 0xA
                 __base_y_G100:
00050a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000343 e0e0      	LDI  R30,LOW(_buffer)
000344 e0f5      	LDI  R31,HIGH(_buffer)
000345 93fa      	ST   -Y,R31
000346 93ea      	ST   -Y,R30
000347 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1:
000348 93fa      	ST   -Y,R31
000349 93ea      	ST   -Y,R30
00034a 01f2      	MOVW R30,R4
00034b 940e 03a5 	CALL __CWD1
00034d 940e 03b2 	CALL __PUTPARD1
00034f e084      	LDI  R24,4
000350 940e 02f6 	CALL _sprintf
000352 9628      	ADIW R28,8
000353 940e 0121 	CALL _lcd_clear
000355 e0a0      	LDI  R26,LOW(_buffer)
000356 e0b5      	LDI  R27,HIGH(_buffer)
000357 940c 0142 	JMP  _lcd_puts
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000359 940e 0108 	CALL __lcd_write_data
00035b e0a3      	LDI  R26,LOW(3)
00035c e0b0      	LDI  R27,0
00035d 940c 0393 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
00035f e3a0      	LDI  R26,LOW(48)
000360 940e 00e3 	CALL __lcd_write_nibble_G100
                +
000362 ec88     +LDI R24 , LOW ( 200 )
000363 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000364 9701     +SBIW R24 , 1
000365 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000366 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
000367 932a      	ST   -Y,R18
000368 85ad      	LDD  R26,Y+13
000369 85be      	LDD  R27,Y+13+1
00036a 85ef      	LDD  R30,Y+15
00036b 89f8      	LDD  R31,Y+15+1
00036c 9509      	ICALL
00036d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
00036e 89e8      	LDD  R30,Y+16
00036f 89f9      	LDD  R31,Y+16+1
000370 9734      	SBIW R30,4
000371 8be8      	STD  Y+16,R30
000372 8bf9      	STD  Y+16+1,R31
000373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000374 85ad      	LDD  R26,Y+13
000375 85be      	LDD  R27,Y+13+1
000376 85ef      	LDD  R30,Y+15
000377 89f8      	LDD  R31,Y+15+1
000378 9509      	ICALL
000379 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
00037a 89a8      	LDD  R26,Y+16
00037b 89b9      	LDD  R27,Y+16+1
00037c 9614      	ADIW R26,4
00037d 940e 03aa 	CALL __GETW1P
00037f 83ee      	STD  Y+6,R30
000380 83ff      	STD  Y+6+1,R31
000381 81ae      	LDD  R26,Y+6
000382 81bf      	LDD  R27,Y+6+1
000383 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000384 89a8      	LDD  R26,Y+16
000385 89b9      	LDD  R27,Y+16+1
000386 9614      	ADIW R26,4
000387 940e 03aa 	CALL __GETW1P
000389 87ea      	STD  Y+10,R30
00038a 87fb      	STD  Y+10+1,R31
00038b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00038c 01de      	MOVW R26,R28
00038d 961c      	ADIW R26,12
00038e 940e 039d 	CALL __ADDW2R15
000390 940e 03aa 	CALL __GETW1P
000392 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000393 9610      	adiw r26,0
000394 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000395 ed80     +LDI R24 , LOW ( 0x7D0 )
000396 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000397 9701     +SBIW R24 , 1
000398 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000399 95a8      	wdr
00039a 9711      	sbiw r26,1
00039b f7c9      	brne __delay_ms0
                 __delay_ms1:
00039c 9508      	ret
                 
                 __ADDW2R15:
00039d 2400      	CLR  R0
00039e 0daf      	ADD  R26,R15
00039f 1db0      	ADC  R27,R0
0003a0 9508      	RET
                 
                 __ANEGW1:
0003a1 95f1      	NEG  R31
0003a2 95e1      	NEG  R30
0003a3 40f0      	SBCI R31,0
0003a4 9508      	RET
                 
                 __CWD1:
0003a5 2f6f      	MOV  R22,R31
0003a6 0f66      	ADD  R22,R22
0003a7 0b66      	SBC  R22,R22
0003a8 2f76      	MOV  R23,R22
0003a9 9508      	RET
                 
                 __GETW1P:
0003aa 91ed      	LD   R30,X+
0003ab 91fc      	LD   R31,X
0003ac 9711      	SBIW R26,1
0003ad 9508      	RET
                 
                 __GETW1PF:
0003ae 9005      	LPM  R0,Z+
0003af 91f4      	LPM  R31,Z
0003b0 2de0      	MOV  R30,R0
0003b1 9508      	RET
                 
                 __PUTPARD1:
0003b2 937a      	ST   -Y,R23
0003b3 936a      	ST   -Y,R22
0003b4 93fa      	ST   -Y,R31
0003b5 93ea      	ST   -Y,R30
0003b6 9508      	RET
                 
                 __SAVELOCR6:
0003b7 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003b8 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003b9 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003ba 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003bb 931a      	ST   -Y,R17
0003bc 930a      	ST   -Y,R16
0003bd 9508      	RET
                 
                 __LOADLOCR6:
0003be 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003bf 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003c0 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003c1 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003c2 8119      	LDD  R17,Y+1
0003c3 8108      	LD   R16,Y
0003c4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128A register use summary:
r0 :  17 r1 :   1 r2 :   0 r3 :   0 r4 :   9 r5 :   4 r6 :   4 r7 :   4 
r8 :   0 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  24 r25:   5 r26:  96 r27:  40 r28:  14 r29:   1 r30: 172 r31:  62 
x  :  23 y  : 168 z  :  15 
Registers used: 27 out of 35 (77.1%)

ATmega128A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  25 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  21 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  58 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   7 cpc   :   5 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   0 inc   :   2 jmp   :  38 ld    :  28 ldd   :  77 
ldi   : 104 lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  18 
movw  :  19 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   6 out   :  15 pop   :   1 push  :   1 rcall :  15 
ret   :  26 reti  :   0 rjmp  :  69 rol   :   0 ror   :   0 sbc   :   2 
sbci  :   2 sbi   :  14 sbic  :   4 sbis  :   0 sbiw  :  20 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  58 std   :  31 sts   :   3 sub   :   1 subi  :  16 
swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 52 out of 117 (44.4%)

ATmega128A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00078a   1876     54   1930  131072   1.5%
[.dseg] 0x000100 0x00050e      0     14     14    4096   0.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 6 warnings
