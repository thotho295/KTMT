;/*
; * Bai9.c
; *         Viet chuong trình bam CT_1 dong chu “Hello-World” chay tung ky tu tu trai sang phai
;man hinh; bam CT_2 thi dong chu tren chay nguoc lai, bam CT_3 thi xoa man hinh.
; * Created: 11/8/2021 12:28:08 PM
; * Author: nguyen thu thao
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdio.h>
;#include <string.h>
;#define BT1 PINB.2
;#define BT2 PINB.3
;#define BT3 PINB.0
;char count=0,count1=0;
;char data[12]="hello-world";

	.DSEG
;char temp[12]="";
;char bam=0;
;char size=11;
;void copy(char data[], char temp[], char start, char end){
; 0000 0016 void copy(char data[], char temp[], char start, char end){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0017     char i=0;
; 0000 0018     for (i = start ; i< end;i++){
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	data -> Y+5
;	temp -> Y+3
;	start -> Y+2
;	end -> Y+1
;	i -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0019         temp[i-start]=data[i];
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 001A     }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001B }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;void main(void)
; 0000 001D {
;PCODE: $00000034 VOL: 0
; 0000 001E     DDRB = 0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 001F     PORTB =0x0D;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0020     lcd_init(16);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0021 
; 0000 0022     while (1)
;PCODE: $0000003B VOL: 0
; 0000 0023     {
; 0000 0024         delay_ms(50);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0025         if (BT3==0){
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0026             count1=0;
;PCODE: $00000042 VOL: 0
; 0000 0027             count=0;
;PCODE: $00000043 VOL: 0
; 0000 0028             bam=0;
;PCODE: $00000044 VOL: 0
; 0000 0029             lcd_clear();
;PCODE: $00000045 VOL: 0
; 0000 002A         }
; 0000 002B         if (BT1 ==0){
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002C             bam=1;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 002D             count1=0;
;PCODE: $0000004C VOL: 0
; 0000 002E             count=0;
;PCODE: $0000004D VOL: 0
; 0000 002F             memset(temp,0,sizeof temp);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0030             lcd_clear();
;PCODE: $00000055 VOL: 0
; 0000 0031         }
; 0000 0032         if (BT2 ==0){
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0033             bam=2;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0034             count1=0;
;PCODE: $0000005C VOL: 0
; 0000 0035             count=0;
;PCODE: $0000005D VOL: 0
; 0000 0036             memset(temp,0,sizeof temp);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0037             lcd_clear();
;PCODE: $00000065 VOL: 0
; 0000 0038         }
; 0000 0039         if (bam==1){
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 003A             if (count==size)
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 003B                 continue;
;PCODE: $0000006D VOL: 0
; 0000 003C             count1++;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 003D             if (count1==16-count+1){
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 003E                 count1=0;
;PCODE: $0000007A VOL: 0
; 0000 003F                 copy(data,temp,size-count-1,size);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0040                 count++;
;PCODE: $00000085 VOL: 0
; 0000 0041                 continue;
;PCODE: $00000086 VOL: 0
; 0000 0042             }
; 0000 0043             lcd_clear();
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0044             if (count>0){
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0045                 lcd_gotoxy(16-count,0);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0046                 lcd_puts(temp);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0047             }
; 0000 0048             lcd_gotoxy(count1-1,0);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0049             lcd_putchar(data[size-count-1]);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 004A         }
; 0000 004B         if (bam==2){
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 004C             if (count==size)
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 004D                 continue;
;PCODE: $000000AB VOL: 0
; 0000 004E             count1++;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 004F             if (count1==16-count+1){
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0050                 count1=0;
;PCODE: $000000B8 VOL: 0
; 0000 0051                 temp[count]=data[count];
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0052                 count++;
;PCODE: $000000C1 VOL: 0
; 0000 0053                 continue;
;PCODE: $000000C2 VOL: 0
; 0000 0054             }
; 0000 0055             lcd_clear();
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0056             if (count>0){
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0057                 lcd_gotoxy(0,0);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0058                 lcd_puts(temp);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0059             }
; 0000 005A             lcd_gotoxy(16-count1,0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 005B             lcd_putchar(data[count]);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 005C         }
; 0000 005D     }
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 005E }
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
